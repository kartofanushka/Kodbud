# Циклы — это сложно?

# Даша начала проходить циклы. 
# Она написала программу, которая просто должна считать сумму чисел до тех пор, пока мы не ввели 0, но что-то пошло не так.
"""

summ=0
number = int(input('Введите число: '))
while number != 0:
    summ += number
    number = int(input('Введите число: '))

print(summ)
"""
# Скопируйте программу в редактор, исправьте её и убедитесь в правильности работы программы.
# =====================
# Введите пароль

# Когда мы включаем ноутбук, он просит нас ввести пароль. Если пароль оказался неверным, нам сообщают об этом и снова просят ввести пароль. И так до тех пор, пока мы не введём правильный пароль, — тогда ноутбук даст доступ в учётную запись, и программа завершится.

# Напишите программу, которая запрашивает у пользователя пароль до тех пор, пока он не введёт верный (верным будет считаться пароль 235).
"""
pas=input('Password?___')
while pas!='235':
    pas=input('input password: ')
print('OK')
"""

# 3
# https://habr.com/ru/post/232291/#lib
"""
import xlrd, xlwt
# Рассмотрим работу с этими способами подробнее. 
# В качестве примера будем использовать готовый файл excel   xl.xls   из которого мы сначала считаем данные из первой ячейки, 
# а затем запишем их во вторую. Таких простых примеров будет достаточно для первого ознакомления.

#открываем файл
rb = xlrd.open_workbook('xl.xls',formatting_info=True)

#выбираем активный лист
sheet = rb.sheet_by_index(0)
#получаем значение первой ячейки A1
val = sheet.row_values(0)[0]
print(val)
#получаем список значений из всех записей
vals = [sheet.row_values(rownum) for rownum in range(sheet.nrows)]
print(vals)

# Как видно чтение данных не составляет труда. Теперь запишем их в другой файл. Для этого создам новый excel файл с новой рабочей книгой:

wb = xlwt.Workbook()
ws = wb.add_sheet('Test')
# Запишем в новый файл полученные ранее данные и сохраним изменения:

#в A1 записываем значение из ячейки A1 прошлого файла
ws.write(0, 0, vals[0])
print(vals[0])

#в столбец B запишем нашу последовательность из столбца A исходного файла
i = 0
for rec in vals:
    ws.write(i,3,rec)
    i =+ i

#сохраняем рабочую книгу
wb.save('xl_rec.xls')

эта хуйня не работает, нужны правки

ниже все ок

# Из примера выше видно, что библиотека xlrd отвечает за чтение данных, а xlwt — за запись, поэтому нет возможности внести изменения в уже созданную книгу без ее копирования в новую. Кроме этого указанные библиотеки работают только с файлами формата xls (Excel 2003) и у них нет поддержки нового формата xlsx (Excel 2007 и выше).
# Чтобы успешно работать с форматом xlsx, понадобится библиотека openpyxl. Для демонстрации ее работы проделаем действия, которые были показаны для предыдущих библиотек.
# Для начала загрузим библиотеку и выберем нужную книгу и рабочий лист:
"""
# """
import openpyxl
wb = openpyxl.load_workbook(filename = 'openpyxl.xlsx')
sheet = wb.active
sheet.title = "t123est"
sheet2 = wb.create_sheet(title="Sh2")

# sheet = wb['test']
# print(sheet)
#считываем значение определенной ячейки
val = sheet['A1'].value
print(val)
#считываем заданный диапазон
vals = [v[0].value for v in sheet['A1':'C10']]
# print(vals)
print('vals')
# Отличие от прошлых библиотек в том, что openpyxl дает возможность отображаться к ячейкам и последовательностям через их имена, 
# что довольно удобно и понятно при чтении программы.
# Теперь посмотрим как нам произвести запись и сохранить данные:

#записываем значение в определенную ячейку
# sheet['B1'] = val

#записываем последовательность
i = 1
for rec in vals:
    sheet2.cell(row=i, column=2,value=rec)
    print (rec)
    print(i)
    i += 1

# К недостаткам данной библиотеки можно отнести, то что, как и в предыдущем примере, нет возможности сохранить изменения без создания новой книги.
# Как было показано выше, для более менее полноценной работы с excel файлами, в данном случае, нужно 4 библиотеки, и это не всегда удобно. 
# Кроме этого, возможно нужен будет доступ к VBA (допустим для какой-либо последующей обработки) и с помощью этих библиотек его не получить.

# сохраняем данные
wb.save('openpyxl.xlsx')
# """
# коммент от препода
# Ну получилось же)

# Лист переименовывается. Новый лист создается.
# Немного пояснений по твоему коду, если вдруг не все понятно:
# vals = [v[0].value for v in sheet['A1':'C10']]   - тут из диапазона А1:С10 берется именно первый столбец (индекс 0), а не весь диапазон.
# Можно использовать цикл типа такого:
# for i in range(3):    # тут количество столбцов
#   	 vals.append([v[i].value for v in sheet['A1':'C10']])

# На запись тоже есть свои нюансы, в том числе конвертация в формат экселя.